# Configuration for virtual machine on Apple Silicone / M1.
# Helper tools for the PS3.

export arch='arm64'
export arch_long='arm64'
export init_system='openrc' # [openrc/systemd]. Currently works only with openrc.
export profile="default/linux/$arch/17.0" # Customize is you want the GUI.
export base_url_autobuilds='https://distfiles.gentoo.org/releases/arm64/autobuilds'
export disk_scheme='gpt' # [gpt/dos]. Suggest using gpt.

export hostname='VM-PS3-Helper'
export root_password='' # Empty string means remove password.
export locale='en_US.utf8' # Default locale. Please include also in locales.

export -a network_links=(
    enp0s1
)

export ssh_allow_root=true # Enable root login through SSH.
export ssh_allow_passwordless=true # Enable logging in without password if user doesn't have one.

export kernel_version='' # Empty value will skip prebuilt kernel installation

export use_cpuid2cpuflags=true # If flags are known, can be directly inserted using package_use.

## Bootloaders ----------------------------------------------------------------------------------

export bootloader='grub-efi' # [petitboot/grub/grub-efi]
export sync_portage=true # Run emerge --sync after emerge-webrsync to get the newest tarball.
export update_system=true # Run emerge --update --newuse --deep @world during installation.

## Partitions -----------------------------------------------------------------------------------

export -a disk_partitions=( # index:mount_order:file_system:mount_point:size:options:dump:pass.
# To use entire remaining space, use "-0" as size. Dont leave empty space, it will not work.
    1:1:vfat:/boot:+256MiB:defaults,noatime:1:2 # BOOT
    2:0:btrfs:/:-0:defaults,noauto:0:1 # ROOT
)

## Locales --------------------------------------------------------------------------------------

export -a locales=(
    'en_US ISO-8859-1'
    'en_US.UTF-8 UTF-8'
)

## Make conf ------------------------------------------------------------------------------------

export -A make_conf=(
    [COMMON_FLAGS]='-O2 -pipe'
    [USE]='zeroconf'
    [MAKEOPTS]='-j7'
    [ACCEPT_LICENSE]='*' # Automatically accept all licenses.
    [GRUB_PLATFORMS]='efi-64'
    [FEATURES]='-news'
)

## Packages and tools ---------------------------------------------------------------------------

export -A package_use=(
    [qemu_1]="app-emulation/qemu static-user QEMU_SOFTMMU_TARGETS: ppc64"
    [qemu_2]="app-emulation/qemu QEMU_USER_TARGETS: ppc64"
    [qemu_3]="dev-libs/glib static-libs"
    [qemu_4]="sys-libs/zlib static-libs"
    [qemu_5]="sys-apps/attr static-libs"
    [qemu_6]="dev-libs/libpcre2 static-libs"
)

export -A package_accept_keywords=(
  [app-admin-sysklogd]='app-admin/sysklogd ~arm64'
)

# Tools neded as fast as possible, before updating system etc.
export -a guest_base_tools=(
    sys-kernel/gentoo-kernel-bin
    sys-boot/grub
)

# Rest of the tools, that can be installed at later stage.
export -a guest_tools=(
    app-admin/sysklogd
    app-portage/gentoolkit
    app-portage/genlop
    app-eselect/eselect-repository
    net-dns/avahi
    sys-devel/distcc
    sys-devel/crossdev
    dev-vcs/git
    dev-vcs/subversion
    sys-kernel/genkernel
    # app-emulation/qemu
)

export -A guest_rc_startup=(
  [default]='sysklogd sshd avahi-daemon distccd'
)

# Additional platform-specific scripts, incjected after given primary function finishes successfully.
export -A extra_scripts=(
    [setup_autostart]='setup_crossdev_host setup_distccd_host setup_bootloader_config'
    # [setup_cpu_flags]='setup_host_qemu_for_ps3'
)
