diff --git a/arch/powerpc/include/uapi/asm/ps3fb.h b/arch/powerpc/include/uapi/asm/ps3fb.h
index fd7e3a0..08a14d5 100644
--- a/arch/powerpc/include/uapi/asm/ps3fb.h
+++ b/arch/powerpc/include/uapi/asm/ps3fb.h
@@ -31,6 +31,10 @@
 #define PS3FB_IOCTL_OFF           _IO('r', 5)        /* return to normal-flip */
 #define PS3FB_IOCTL_FSEL          _IOW('r', 6, int)  /* blit and flip request */
 
+#define PS3FB_IOCTL_CURSOR_ENABLE _IOW('r', 10, int)	/* cursor enable/disable */
+#define PS3FB_IOCTL_CURSOR_POS    _IOW('r', 11, int)	/* cursor x/y pos*/
+#define PS3FB_IOCTL_CURSOR_OFFS   _IOW('r', 12, int)	/* cursor data offset */
+
 #ifndef FBIO_WAITFORVSYNC
 #define FBIO_WAITFORVSYNC         _IOW('F', 0x20, __u32) /* wait for vsync */
 #endif
diff --git a/drivers/video/fbdev/ps3fb.c b/drivers/video/fbdev/ps3fb.c
index c4a22a7..f99c4c9 100644
--- a/drivers/video/fbdev/ps3fb.c
+++ b/drivers/video/fbdev/ps3fb.c
@@ -834,6 +834,18 @@ static int ps3fb_ioctl(struct fb_info *info, unsigned int cmd,
 		console_unlock();
 		break;
 
+	case PS3FB_IOCTL_CURSOR_ENABLE:
+		retval = lv1_gpu_context_attribute(ps3fb.context_handle, 0x10c, 0/*head*/, arg ? 0x1 : 0x02, 0x0, 0x0);	/* enable/disable */
+		break;
+
+	case PS3FB_IOCTL_CURSOR_POS:
+ 		retval = lv1_gpu_context_attribute(ps3fb.context_handle, 0x10b, 0/*head*/, 3, arg & 0xffff, arg >> 16); /* x/y pos */
+		break;
+
+	case PS3FB_IOCTL_CURSOR_OFFS:
+		retval = lv1_gpu_context_attribute(ps3fb.context_handle, 0x10b, 0/*head*/, 2, arg, 0); /* offset */
+		break;
+
 	default:
 		retval = -ENOIOCTLCMD;
 		break;
@@ -1086,6 +1098,10 @@ static int ps3fb_probe(struct ps3_system_bus_device *dev)
 
 	fb_info(info, "using %u KiB of video memory\n", info->fix.smem_len >> 10);
 
+	/* test cursor init here */
+	status = lv1_gpu_context_attribute(ps3fb.context_handle, 0x10b, 0/*head*/, 1, 0, 0); /* init */
+	if (status) dev_err(info->device, "%s: cursor init failed (%d)\n", __func__, status);
+
 	return 0;
 
 err_fb_dealloc:
